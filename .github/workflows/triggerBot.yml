name: Trigger Bot

on:
  workflow_dispatch:
  #schedule:
    #- cron: "0 */3 * * *"

permissions:
  contents: write
  actions: write

jobs:
  run-down-bot:
    runs-on: ubuntu-latest

    env:
      FB_TOKEN: ${{ secrets.FB_TOKEN }}
      IMG_TOKEN: ${{ secrets.IMG_TOKEN }}
      GIPHY_API_KEY: ${{ secrets.GIPHY_API_KEY }}

    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: install imagemagick
        run: sudo apt-get install -y imagemagick

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.13
          architecture: x64 

      - name: Upgrade pip to latest stable
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run Python script
        run: python main.py

      - name: Update replyed_ids.txt
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "updated"
          file_pattern: replyed_ids.txt
          push_options: '--force'

      - name: Activate the workflow
        run: |
            REPO="${{ github.repository }}"
            BRANCH_NAME="${{ github.ref_name }}"

            echo "Repository: $REPO"
            echo "Branch Name: $BRANCH_NAME"

            # Recuperar o workflow_id do único workflow no repositório
            WORKFLOW_DATA=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$REPO/actions/workflows)
            echo "Workflow Data: $WORKFLOW_DATA"

            WORKFLOW_ID=$(echo "$WORKFLOW_DATA" | jq -r '.workflows[0].id')
            echo "Workflow ID: $WORKFLOW_ID"

            retries=0
            max_retries=3

            while [[ $retries -lt $max_retries ]]; do
              response=$(curl -o response_body.txt -s -w "%{http_code}" -X POST \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"ref\":\"$BRANCH_NAME\"}" \
                "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_ID/dispatches")

              echo "HTTP Response Code: $response"
              echo "HTTP Response Body:"
              cat response_body.txt

              if [[ $response -ge 200 && $response -lt 300 ]]; then
                echo "Workflow triggered successfully!"
                exit 0
              else
                echo "Error when triggering workflow (attempt $((retries + 1))/$max_retries)"
                retries=$((retries + 1))
                sleep 5
              fi
            done

            if [[ $retries -eq $max_retries ]]; then
              echo "Failed to trigger workflow after $max_retries attempts."
              exit 1
            fi
